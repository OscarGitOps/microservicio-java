
name: CI

on:

  push:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Clonacion de codigo
        uses: actions/checkout@v4

     #### JDK para para aplicacion 
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with: 
          java-version: '8'
          distribution: 'temurin'
      
      - name: Compilacion MVN
        run: mvn package

      - name: Pruebas e informe de cobertura
        run: mvn clean verify

      - name: Informe de cobertura PDF
        run: mvn pdf:pdf
        
      - name: Crear artefacto de Jacoco
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/
        
      #### JDK nuevo para sonar 
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with: 
          java-version: '17'
          distribution: 'temurin'
      
      - name: Analisis SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=oscargitops \
          -Dsonar.projectKey=OscarGitOps_microservicio-java
      
      
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: oscargitops
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker build
        run: |
          docker build -t oscargitops/microservicio-java:latest .

      - name: Docker push
        run: |
          docker push oscargitops/microservicio-java:latest
  
  
  deploy:
    needs: build
    runs-on: self-hosted

    steps:

      - name: Clonacion de codigo
        uses: actions/checkout@v4
      
      - name: Despliegue
        run: |
          kubectl apply -f deploy.yaml 
